import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable de.skycoder42.RestClient 3.0'

Module {
    dependencies: ["QtQml 2.13", "QtQml.Models 2.13"]
    Component { name: "QAbstractTableModel"; prototype: "QAbstractItemModel" }
    Component {
        name: "QtRestClient::PagingModel"
        prototype: "QAbstractTableModel"
        exports: ["de.skycoder42.RestClient/PagingModel 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "typeId"; type: "int"; isReadonly: true }
        Signal { name: "fetchError" }
        Signal {
            name: "typeIdChanged"
            Parameter { name: "typeId"; type: "int" }
        }
        Method {
            name: "initialize"
            Parameter { name: "initialUrl"; type: "QUrl" }
            Parameter { name: "fetcher"; type: "QtRestClient::IPagingModelFetcher"; isPointer: true }
            Parameter { name: "typeId"; type: "int" }
        }
        Method {
            name: "initialize"
            Parameter { name: "initialUrl"; type: "QUrl" }
            Parameter { name: "fetcher"; type: "QtRestClient::IPagingModelFetcher"; isPointer: true }
        }
        Method {
            name: "initialize"
            Parameter { name: "initialUrl"; type: "QUrl" }
            Parameter { name: "restClass"; type: "QtRestClient::RestClass"; isPointer: true }
            Parameter { name: "typeId"; type: "int" }
        }
        Method {
            name: "initialize"
            Parameter { name: "initialUrl"; type: "QUrl" }
            Parameter { name: "restClass"; type: "QtRestClient::RestClass"; isPointer: true }
        }
        Method {
            name: "initialize"
            Parameter { name: "reply"; type: "QtRestClient::RestReply"; isPointer: true }
            Parameter { name: "fetcher"; type: "QtRestClient::IPagingModelFetcher"; isPointer: true }
            Parameter { name: "typeId"; type: "int" }
        }
        Method {
            name: "initialize"
            Parameter { name: "reply"; type: "QtRestClient::RestReply"; isPointer: true }
            Parameter { name: "fetcher"; type: "QtRestClient::IPagingModelFetcher"; isPointer: true }
        }
        Method {
            name: "initialize"
            Parameter { name: "reply"; type: "QtRestClient::RestReply"; isPointer: true }
            Parameter { name: "restClass"; type: "QtRestClient::RestClass"; isPointer: true }
            Parameter { name: "typeId"; type: "int" }
        }
        Method {
            name: "initialize"
            Parameter { name: "reply"; type: "QtRestClient::RestReply"; isPointer: true }
            Parameter { name: "restClass"; type: "QtRestClient::RestClass"; isPointer: true }
        }
        Method {
            name: "initialize"
            Parameter { name: "paging"; type: "QtRestClient::IPaging"; isPointer: true }
            Parameter { name: "fetcher"; type: "QtRestClient::IPagingModelFetcher"; isPointer: true }
            Parameter { name: "typeId"; type: "int" }
        }
        Method {
            name: "initialize"
            Parameter { name: "paging"; type: "QtRestClient::IPaging"; isPointer: true }
            Parameter { name: "fetcher"; type: "QtRestClient::IPagingModelFetcher"; isPointer: true }
        }
        Method {
            name: "initialize"
            Parameter { name: "paging"; type: "QtRestClient::IPaging"; isPointer: true }
            Parameter { name: "restClass"; type: "QtRestClient::RestClass"; isPointer: true }
            Parameter { name: "typeId"; type: "int" }
        }
        Method {
            name: "initialize"
            Parameter { name: "paging"; type: "QtRestClient::IPaging"; isPointer: true }
            Parameter { name: "restClass"; type: "QtRestClient::RestClass"; isPointer: true }
        }
        Method {
            name: "object"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
    }
    Component {
        name: "QtRestClient::QmlGenericRestReply"
        prototype: "QObject"
        exports: ["de.skycoder42.RestClient/GenericRestReply 3.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "reply"; type: "QtRestClient::RestReply"; isReadonly: true; isPointer: true }
        Property { name: "returnType"; type: "string"; isReadonly: true }
        Property { name: "errorType"; type: "string"; isReadonly: true }
        Method {
            name: "addCompletedHandler"
            Parameter { name: "completedHandler"; type: "QJSValue" }
        }
        Method {
            name: "addSucceededHandler"
            Parameter { name: "succeededHandler"; type: "QJSValue" }
        }
        Method {
            name: "addFailedHandler"
            Parameter { name: "failedHandler"; type: "QJSValue" }
        }
        Method {
            name: "addErrorHandler"
            Parameter { name: "errorHandler"; type: "QJSValue" }
        }
    }
    Component {
        name: "QtRestClient::QmlPaging"
        exports: ["de.skycoder42.RestClient/Paging 3.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "items"; type: "QVariantList"; isReadonly: true }
        Property { name: "total"; type: "int"; isReadonly: true }
        Property { name: "offset"; type: "int"; isReadonly: true }
        Property { name: "hasNext"; type: "bool"; isReadonly: true }
        Property { name: "nextUrl"; type: "QUrl"; isReadonly: true }
        Property { name: "hasPrevious"; type: "bool"; isReadonly: true }
        Property { name: "previousUrl"; type: "QUrl"; isReadonly: true }
        Property { name: "properties"; type: "QVariantMap"; isReadonly: true }
        Method {
            name: "iterate"
            Parameter { name: "iterator"; type: "QJSValue" }
            Parameter { name: "to"; type: "int" }
            Parameter { name: "from"; type: "int" }
        }
        Method {
            name: "iterate"
            Parameter { name: "iterator"; type: "QJSValue" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "iterate"
            Parameter { name: "iterator"; type: "QJSValue" }
        }
        Method {
            name: "iterate"
            Parameter { name: "iterator"; type: "QJSValue" }
            Parameter { name: "failureHandler"; type: "QJSValue" }
            Parameter { name: "errorHandler"; type: "QJSValue" }
            Parameter { name: "to"; type: "int" }
            Parameter { name: "from"; type: "int" }
        }
        Method {
            name: "iterate"
            Parameter { name: "iterator"; type: "QJSValue" }
            Parameter { name: "failureHandler"; type: "QJSValue" }
            Parameter { name: "errorHandler"; type: "QJSValue" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "iterate"
            Parameter { name: "iterator"; type: "QJSValue" }
            Parameter { name: "failureHandler"; type: "QJSValue" }
            Parameter { name: "errorHandler"; type: "QJSValue" }
        }
        Method { name: "isValid"; type: "bool" }
        Method { name: "next"; type: "QtRestClient::RestReply*" }
        Method { name: "previous"; type: "QtRestClient::RestReply*" }
    }
    Component {
        name: "QtRestClient::QmlRestClass"
        defaultProperty: "classes"
        prototype: "QObject"
        exports: ["de.skycoder42.RestClient/RestClass 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "restClass"; type: "QtRestClient::RestClass"; isReadonly: true; isPointer: true }
        Property { name: "path"; type: "string" }
        Property { name: "classes"; type: "QtRestClient::QmlRestClass"; isList: true; isReadonly: true }
        Signal {
            name: "restClassChanged"
            Parameter { name: "restClass"; type: "QtRestClient::RestClass"; isPointer: true }
        }
        Signal {
            name: "pathChanged"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "setPath"
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "call"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "verb"; type: "string" }
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optBody"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
            Parameter { name: "optAsPost"; type: "QJSValue" }
            Parameter { name: "optHeaders"; type: "QJSValue" }
        }
        Method {
            name: "call"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "verb"; type: "string" }
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optBody"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
            Parameter { name: "optAsPost"; type: "QJSValue" }
        }
        Method {
            name: "call"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "verb"; type: "string" }
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optBody"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
        }
        Method {
            name: "call"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "verb"; type: "string" }
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optBody"; type: "QJSValue" }
        }
        Method {
            name: "call"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "verb"; type: "string" }
            Parameter { name: "optPath"; type: "QJSValue" }
        }
        Method {
            name: "call"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "verb"; type: "string" }
        }
        Method {
            name: "get"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
            Parameter { name: "optHeaders"; type: "QJSValue" }
        }
        Method {
            name: "get"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
        }
        Method {
            name: "get"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
        }
        Method { name: "get"; type: "QtRestClient::QmlRestReply*" }
        Method {
            name: "post"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optBodyParams"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
            Parameter { name: "optHeaders"; type: "QJSValue" }
        }
        Method {
            name: "post"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optBodyParams"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
        }
        Method {
            name: "post"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optBodyParams"; type: "QJSValue" }
        }
        Method {
            name: "post"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
        }
        Method { name: "post"; type: "QtRestClient::QmlRestReply*" }
        Method {
            name: "put"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPathOrBody"; type: "QJSValue" }
            Parameter { name: "body"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
            Parameter { name: "optHeaders"; type: "QJSValue" }
        }
        Method {
            name: "put"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPathOrBody"; type: "QJSValue" }
            Parameter { name: "body"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
        }
        Method {
            name: "put"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPathOrBody"; type: "QJSValue" }
            Parameter { name: "body"; type: "QJSValue" }
        }
        Method {
            name: "put"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPathOrBody"; type: "QJSValue" }
        }
        Method {
            name: "deleteResource"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
            Parameter { name: "optHeaders"; type: "QJSValue" }
        }
        Method {
            name: "deleteResource"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
        }
        Method {
            name: "deleteResource"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
        }
        Method { name: "deleteResource"; type: "QtRestClient::QmlRestReply*" }
        Method {
            name: "patch"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPathOrBody"; type: "QJSValue" }
            Parameter { name: "body"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
            Parameter { name: "optHeaders"; type: "QJSValue" }
        }
        Method {
            name: "patch"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPathOrBody"; type: "QJSValue" }
            Parameter { name: "body"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
        }
        Method {
            name: "patch"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPathOrBody"; type: "QJSValue" }
            Parameter { name: "body"; type: "QJSValue" }
        }
        Method {
            name: "patch"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPathOrBody"; type: "QJSValue" }
        }
        Method {
            name: "head"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
            Parameter { name: "optHeaders"; type: "QJSValue" }
        }
        Method {
            name: "head"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
            Parameter { name: "optParams"; type: "QJSValue" }
        }
        Method {
            name: "head"
            type: "QtRestClient::QmlRestReply*"
            Parameter { name: "optPath"; type: "QJSValue" }
        }
        Method { name: "head"; type: "QtRestClient::QmlRestReply*" }
    }
    Component {
        name: "QtRestClient::QmlRestClient"
        defaultProperty: "classes"
        prototype: "QtRestClient::RestClient"
        exports: ["de.skycoder42.RestClient/RestClient 3.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "classes"; type: "QtRestClient::QmlRestClass"; isList: true; isReadonly: true }
    }
    Component {
        name: "QtRestClient::QmlRestClientGlobal"
        prototype: "QObject"
        exports: ["de.skycoder42.RestClient/QtRestClient 3.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "addGlobalApi"
            type: "bool"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "client"; type: "QtRestClient::RestClient"; isPointer: true }
        }
        Method {
            name: "removeGlobalApi"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "deleteClient"; type: "bool" }
        }
        Method {
            name: "removeGlobalApi"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "apiClient"
            type: "QtRestClient::RestClient*"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "apiRootClass"
            type: "QtRestClient::QmlRestClass*"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "apiRootClass"
            type: "QtRestClient::QmlRestClass*"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "createApiClass"
            type: "QtRestClient::QmlRestClass*"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "path"; type: "string" }
            Parameter { name: "parent"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "createApiClass"
            type: "QtRestClient::QmlRestClass*"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "path"; type: "string" }
        }
        Method {
            name: "createPaging"
            type: "QtRestClient::QmlPaging"
            Parameter { name: "client"; type: "QtRestClient::RestClient"; isPointer: true }
            Parameter { name: "data"; type: "QVariantMap" }
        }
    }
    Component {
        name: "QtRestClient::QmlRestReply"
        prototype: "QObject"
        exports: ["de.skycoder42.RestClient/RestReply 3.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "reply"; type: "QtRestClient::RestReply"; isReadonly: true; isPointer: true }
        Method {
            name: "addCompletedHandler"
            Parameter { name: "completedHandler"; type: "QJSValue" }
        }
        Method {
            name: "addSucceededHandler"
            Parameter { name: "succeededHandler"; type: "QJSValue" }
        }
        Method {
            name: "addFailedHandler"
            Parameter { name: "failedHandler"; type: "QJSValue" }
        }
        Method {
            name: "addErrorHandler"
            Parameter { name: "errorHandler"; type: "QJSValue" }
        }
    }
    Component {
        name: "QtRestClient::RestClient"
        prototype: "QObject"
        Enum {
            name: "DataMode"
            values: {
                "Cbor": 0,
                "Json": 1
            }
        }
        Property { name: "dataMode"; type: "DataMode" }
        Property { name: "baseUrl"; type: "QUrl" }
        Property { name: "apiVersion"; type: "QVersionNumber" }
        Property { name: "globalHeaders"; type: "HeaderHash" }
        Property { name: "globalParameters"; type: "QUrlQuery" }
        Property { name: "requestAttributes"; type: "QHash<QNetworkRequest::Attribute,QVariant>" }
        Property { name: "async"; type: "bool" }
        Property { name: "sslConfiguration"; type: "QSslConfiguration" }
        Signal {
            name: "dataModeChanged"
            Parameter { name: "dataMode"; type: "DataMode" }
        }
        Signal {
            name: "baseUrlChanged"
            Parameter { name: "baseUrl"; type: "QUrl" }
        }
        Signal {
            name: "apiVersionChanged"
            Parameter { name: "apiVersion"; type: "QVersionNumber" }
        }
        Signal {
            name: "globalHeadersChanged"
            Parameter { name: "globalHeaders"; type: "HeaderHash" }
        }
        Signal {
            name: "globalParametersChanged"
            Parameter { name: "globalParameters"; type: "QUrlQuery" }
        }
        Signal {
            name: "requestAttributesChanged"
            Parameter { name: "requestAttributes"; type: "QHash<QNetworkRequest::Attribute,QVariant>" }
        }
        Signal {
            name: "asyncChanged"
            Parameter { name: "async"; type: "bool" }
        }
        Signal {
            name: "sslConfigurationChanged"
            Parameter { name: "sslConfiguration"; type: "QSslConfiguration" }
        }
        Method {
            name: "setManager"
            Parameter { name: "manager"; type: "QNetworkAccessManager"; isPointer: true }
        }
        Method {
            name: "setSerializer"
            Parameter { name: "serializer"; type: "QtJsonSerializer::SerializerBase"; isPointer: true }
        }
        Method {
            name: "setPagingFactory"
            Parameter { name: "factory"; type: "IPagingFactory"; isPointer: true }
        }
        Method {
            name: "setDataMode"
            Parameter { name: "dataMode"; type: "DataMode" }
        }
        Method {
            name: "setBaseUrl"
            Parameter { name: "baseUrl"; type: "QUrl" }
        }
        Method {
            name: "setApiVersion"
            Parameter { name: "apiVersion"; type: "QVersionNumber" }
        }
        Method {
            name: "setGlobalHeaders"
            Parameter { name: "globalHeaders"; type: "HeaderHash" }
        }
        Method {
            name: "setGlobalParameters"
            Parameter { name: "globalParameters"; type: "QUrlQuery" }
        }
        Method {
            name: "setRequestAttributes"
            Parameter { name: "requestAttributes"; type: "QHash<QNetworkRequest::Attribute,QVariant>" }
        }
        Method { name: "setModernAttributes" }
        Method {
            name: "setAsync"
            Parameter { name: "async"; type: "bool" }
        }
        Method {
            name: "setSslConfiguration"
            Parameter { name: "sslConfiguration"; type: "QSslConfiguration" }
        }
        Method {
            name: "addGlobalHeader"
            Parameter { name: "name"; type: "QByteArray" }
            Parameter { name: "value"; type: "QByteArray" }
        }
        Method {
            name: "removeGlobalHeader"
            Parameter { name: "name"; type: "QByteArray" }
        }
        Method {
            name: "addGlobalParameter"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "value"; type: "string" }
        }
        Method {
            name: "removeGlobalParameter"
            Parameter { name: "name"; type: "string" }
        }
        Method {
            name: "addRequestAttribute"
            Parameter { name: "attribute"; type: "QNetworkRequest::Attribute" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "removeRequestAttribute"
            Parameter { name: "attribute"; type: "QNetworkRequest::Attribute" }
        }
    }
}
