/*!
@class QtRestClient::RequestBuilder

The builder is used by RestClient, RestClass and other components to build the API requests.

@sa RestClient::builder, RestClass::builer
*/

/*!
@fn QtRestClient::RequestBuilder::RequestBuilder(const QUrl &, QNetworkAccessManager *)

@param nam The network access manager to be used. Can be `nullptr`
@param baseUrl The base URL to build ontop of

The base URL is required in order to build. As the name suggests, it's used as base

@sa RestClient::baseUrl, RequestBuilder::send
*/

/*!
@fn QtRestClient::RequestBuilder::setCredentials

@param user The username to be set on the URL
@param password The password to be set on the URL
@returns A reference to this builder

@sa QUrl::setUserInfo
*/

/*!
@fn QtRestClient::RequestBuilder::setVersion

@param version The API version
@returns A reference to this builder

See RestClient::apiVersion for details

@sa RestClient::apiVersion
*/

/*!
@fn QtRestClient::RequestBuilder::addPath(const QString &)

@param pathSegment The path to be added to the builders URL
@returns A reference to this builder

@sa RestClient::createClass, RequestBuilder::trailingSlash, QUrl::setPath
*/

/*!
@fn QtRestClient::RequestBuilder::trailingSlash

@param enable Enable/disable the trailing slash of the path
@returns A reference to this builder

Enabled: `http://example.com/my/path/?id=42`<br/>
Disabled: `http://example.com/my/path?id=42`

@sa RequestBuilder::addPath(const QString &), QUrl::setPath
*/

/*!
@fn QtRestClient::RequestBuilder::addParameter

@param name The parameters name
@param value The parameters value
@returns A reference to this builder

@sa RestClient::globalParameters, QUrl::setQuery(const QUrlQuery &)
*/

/*!
@fn QtRestClient::RequestBuilder::addParameters

@param parameters The parameters to be set
@returns A reference to this builder

@sa RestClient::globalParameters, QUrl::setQuery(const QUrlQuery &)
*/

/*!
@fn QtRestClient::RequestBuilder::setFragment

@param fragment The URL fragment to be set
@returns A reference to this builder

@sa QUrl::setFragment
*/

/*!
@fn QtRestClient::RequestBuilder::addHeader

@param name The header name
@param value The header value
@returns A reference to this builder

@sa RestClient::globalHeaders, QNetworkRequest::setRawHeader
*/

/*!
@fn QtRestClient::RequestBuilder::addHeaders

@param headers The headers to be set
@returns A reference to this builder

@sa RestClient::globalHeaders, QNetworkRequest::setRawHeader
*/

/*!
@fn QtRestClient::RequestBuilder::updateFromRelativeUrl

@param url The (relative) URL to update from
@param mergeQuery Specifies, whether the url queries should be merged
@param keepFragment Specifies, whether the fragment should be kept or not
@returns A reference to this builder

This function does the following:
- Update the builders url host and path from `url`
- Either merges the query of URL with the exiting one or replaces it
- Either takes the fragment of `url` or keeps the existing one

@note If either the query or the fragment of `url` are emtpy, and you do not keep/merge, then
the will be replaced by an empty query/fragment

@sa QUrl::resolved
*/

/*!
@fn QtRestClient::RequestBuilder::setAttribute

@param attribute The attribute to be set
@param value The attributes value
@returns A reference to this builder

@note This property has no effect if using buildUrl()

@sa RestClient::requestAttributes, QNetworkRequest::setAttribute
*/

/*!
@fn QtRestClient::RequestBuilder::setAttributes

@param attributes The attributes to be set
@returns A reference to this builder

@note This property has no effect if using buildUrl()

@sa RestClient::requestAttributes, QNetworkRequest::setAttribute
*/

/*!
@fn QtRestClient::RequestBuilder::setSslConfig

@param sslConfig The ssl configuration to be used
@returns A reference to this builder

If you don't specify a ssl configuration, the builder will use the default configuration

@note This property has no effect if using buildUrl()

@sa RestClient::sslConfiguration, QNetworkRequest::setSslConfiguration, QSslConfiguration::defaultConfiguration
*/

/*!
@fn QtRestClient::RequestBuilder::setBody(const QByteArray &, const QByteArray &)

@param body The data to be sent as Content
@param contentType The content type for the Content
@returns A reference to this builder

@note This property is used by send() only!

@sa QNetworkAccessManager::sendCustomRequest
*/

/*!
@fn QtRestClient::RequestBuilder::setBody(const QJsonObject &)

@param body The JSON data to be sent as Content (sets Content-Type to "application/json")
@returns A reference to this builder

@note This property is used by send() only!

@sa QNetworkAccessManager::sendCustomRequest
*/

/*!
@fn QtRestClient::RequestBuilder::setVerb

@param verb The HTTP-Verb to be used
@returns A reference to this builder

If this property is not set, the HTTP-GET will be used as default

@note This property is used by send() only!

@sa QNetworkAccessManager::sendCustomRequest
*/

/*!
@fn QtRestClient::RequestBuilder::buildUrl

@returns The generated URL

@sa RequestBuilder::build, RequestBuilder::send
*/

/*!
@fn QtRestClient::RequestBuilder::build

@returns The generated network request

@sa RequestBuilder::buildUrl, RequestBuilder::send
*/

/*!
@fn QtRestClient::RequestBuilder::send

@returns The network reply for the sent request

@sa RequestBuilder::buildUrl, RequestBuilder::build
*/
