qtPrepareTool(QMAKE_QRESTBUILDER, qrestbuilder)

isEmpty(QRESTBUILDER_DIR):QRESTBUILDER_DIR = .

debug_and_release {
    CONFIG(debug, debug|release):SUFFIX = /debug
    CONFIG(release, debug|release):SUFFIX = /release
}

QRESTBUILDER_DIR = $$QRESTBUILDER_DIR$$SUFFIX

{
qrestbuilder_c.name = QRESTBUILDER class ${QMAKE_FILE_IN}.h
qrestbuilder_c.input = REST_API_CLASSES
qrestbuilder_c.variable_out = QRESTBUILDER_HEADERS
qrestbuilder_c.commands = $$QMAKE_QRESTBUILDER --class --in ${QMAKE_FILE_IN} --header ${QMAKE_FILE_OUT} --impl $$QRESTBUILDER_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_CPP)}
qrestbuilder_c.output = $$QRESTBUILDER_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
qrestbuilder_c.CONFIG += target_predeps
qrestbuilder_c.depends += $$QMAKE_QRESTBUILDER_EXE

QMAKE_EXTRA_COMPILERS += qrestbuilder_c

qrestbuilder_o.name = QRESTBUILDER object ${QMAKE_FILE_IN}.h
qrestbuilder_o.input = REST_API_OBJECTS
qrestbuilder_o.variable_out = QRESTBUILDER_HEADERS
qrestbuilder_o.commands = $$QMAKE_QRESTBUILDER --object --in ${QMAKE_FILE_IN} --header ${QMAKE_FILE_OUT} --impl $$QRESTBUILDER_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_CPP)}
qrestbuilder_o.output = $$QRESTBUILDER_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
qrestbuilder_o.CONFIG += target_predeps
qrestbuilder_o.depends += $$QMAKE_QRESTBUILDER_EXE

QMAKE_EXTRA_COMPILERS += qrestbuilder_o

qrestbuilder_m.name = QRESTBUILDER_MOC ${QMAKE_FILE_IN}
qrestbuilder_m.input = QRESTBUILDER_HEADERS
qrestbuilder_m.variable_out = GENERATED_SOURCES
qrestbuilder_m.commands = ${QMAKE_FUNC_mocCmdBase} ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
qrestbuilder_m.output = $$MOC_DIR/$${QMAKE_H_MOD_MOC}${QMAKE_FILE_BASE}$${first(QMAKE_EXT_CPP)}
qrestbuilder_m.CONFIG += target_predeps moc_verify
qrestbuilder_m.depends += $$QMAKE_QRESTBUILDER_EXE $$WIN_INCLUDETEMP $$moc_predefs.output
qrestbuilder_m.dependency_type = TYPE_C

QMAKE_EXTRA_COMPILERS += qrestbuilder_m

qrestbuilder_s.name = QRESTBUILDER ${QMAKE_FILE_IN}.cpp
qrestbuilder_s.input = QRESTBUILDER_HEADERS
qrestbuilder_s.variable_out = GENERATED_SOURCES
qrestbuilder_s.commands = $$escape_expand(\\n) # force creation of rule
qrestbuilder_s.output = $$QRESTBUILDER_DIR/${QMAKE_FILE_BASE}$${first(QMAKE_EXT_CPP)}
qrestbuilder_s.CONFIG += target_predeps

QMAKE_EXTRA_COMPILERS += qrestbuilder_s
}

!isEmpty(REST_API_DEFINITONS) {
    INCLUDEPATH += $$absolute_path($$QRESTBUILDER_DIR, $$OUT_PWD)
}

QMAKE_DIR_REPLACE += QRESTBUILDER_DIR
QMAKE_DIR_REPLACE_SANE += QRESTBUILDER_DIR
